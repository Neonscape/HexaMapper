name: Build and Release

on:
  push:
    branches:
      - master # Trigger on pushes to the main branch for regular builds
    tags:
      - "v*" # Trigger only on tags like v1.0, v1.0.1, etc., for releases
  pull_request:
    branches:
      - master # Trigger on pull requests to the main branch for regular builds

env:
  APP_NAME: HexaMapper

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write # Needed for the release step, even if it's conditional
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12" # Or specify your exact Python version, e.g., '3.9'

      - name: Create and activate virtual environment
        run: python -m venv .venv && .venv\Scripts\activate

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install PyInstaller and UPX
        run: pip install pyinstaller && choco install upx --no-progress

      - name: Build Windows application
        run: pyinstaller ${{ env.APP_NAME }}.spec # Replace your_script.spec with your actual .spec file name

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/
          retention-days: 30 # Artifacts will be available for 7 days

      - name: Create Release (Windows)
        if: startsWith(github.ref, 'refs/tags/') # This step only runs if a tag triggered the workflow
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }} (Windows)
          body: |
            Windows release for ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed for the release step, even if it's conditional
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12" # Or specify your exact Python version, e.g., '3.9'

      - name: Install Qt platform dependencies (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y libxcb-xinerama0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-shape0 libxcb-util0 libxcb-xfixes0 libxcb-xkb1 libxkbcommon-x11-0 libgl1-mesa-glx

      - name: Create and activate virtual environment
        run: python -m venv .venv && source .venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install PyInstaller and UPX
        run: pip install pyinstaller && sudo apt-get update && sudo apt-get install -y upx-ucl

      - name: Build Linux application
        run: pyinstaller ${{ env.APP_NAME }}.spec # Replace your_script.spec with your actual .spec file name

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: dist/
          retention-days: 30 # Artifacts will be available for 7 days

      - name: Create Release (Linux)
        if: startsWith(github.ref, 'refs/tags/') # This step only runs if a tag triggered the workflow
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }} (Linux)
          body: |
            Linux release for ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
